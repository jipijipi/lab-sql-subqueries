USE sakila;

-- List the number of films per category.
SELECT category.name AS category, COUNT(film_category.film_id) AS film_count FROM category JOIN film_category ON category.category_id = film_category.category_id GROUP BY category;

-- Retrieve the store ID, city, and country for each store.

SELECT store.store_id, city.city, country.country 
FROM store 
JOIN address ON store.address_id = address.address_id 
JOIN city ON address.city_id = city.city_id 
JOIN country ON city.country_id = country.country_id;

-- Calculate the total revenue generated by each store in dollars.

SELECT store.store_id AS store, SUM(payment.amount) AS total
FROM payment 
JOIN staff ON staff.staff_id = payment.staff_id
JOIN store ON staff.store_id = store.store_id
GROUP BY store.store_id;

-- Determine the average running time of films for each category.

SELECT category.name AS category, AVG(length) AS average_duration 
FROM film
JOIN film_category ON film.film_id = film_category.film_id
JOIN category ON category.category_id = film_category.category_id
GROUP BY category;

-- Determine the number of copies of the film "Hunchback Impossible" that exist in the inventory system.

SELECT COUNT(*) AS count
    FROM inventory
    WHERE film_id = (
        SELECT film_id
        FROM film
        WHERE title = 'Hunchback Impossible'
    );

-- List all films whose length is longer than the average length of all the films in the Sakila database.
SELECT title, length FROM film
WHERE length > (
	SELECT AVG(length) 
    FROM film
    );
    
-- Use a subquery to display all actors who appear in the film "Alone Trip".


SELECT first_name, last_name 
FROM actor 
WHERE actor_id 
IN (SELECT actor_id 
    FROM film_actor 
    WHERE film_id = 
		(SELECT film_id 
        FROM film 
        WHERE title = "Alone Trip")
	);




